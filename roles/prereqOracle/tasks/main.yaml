---

- name: check u01 free disk space
  shell: df -P /u01 | awk 'END { print $4 }'
  register: u01size
  failed_when: u01size.stdout|int < {{ u01_size_gb }} * 1024 * 1024

- name: check tmp free disk space
  shell: df -P /tmp | awk 'END { print $4 }'
  register: tmpsize
  failed_when: tmpsize.stdout|int < {{ tmp_size_gb }} * 1024 * 1024

- name: create group dba
  group: name=dba state=present

- name: create group oinstall
  group: name=oinstall state=present

- name: create user oracle
  user: name=oracle comment="Oracle RDBMS user" group=oinstall groups=oinstall,dba

- name: create user grid
  user: name=grid comment="Oracle GRID user" group=oinstall groups=oinstall,dba

- name: create directory for installation files
  file: dest={{ patch_dir }} state=directory owner=oracle group=oinstall

- name: create directory for rdbms installation
  file: dest={{ oracle_root }} state=directory owner=oracle group=oinstall

- name: copy installer
  synchronize:
    src=files/
    dest={{ patch_dir }}
    mode=push

- name: chmod oracle root
  file: path={{ oracle_root }} owner=oracle group=oinstall mode=0775 state=directory

- name: chmod install directory
  file: path={{ patch_dir }} owner=oracle group=oinstall mode=0775 state=directory

- name: change binaries owner to oracle
  file: path={{ item }} owner=oracle group=oinstall
  with_items:
    - "{{ patch_dir }}/{{ rdbms_zip_part1 }}"
    - "{{ patch_dir }}/{{ rdbms_zip_part2 }}"
    - "{{ patch_dir }}/{{ rdbms_psu }}"

- name: change binaries owner to grid
  file: path={{ item }} owner=grid group=oinstall
  with_items:
    - "{{ patch_dir }}/{{ grid_zip_part1 }}"
    - "{{ patch_dir }}/{{ grid_zip_part2 }}"
    - "{{ patch_dir }}/{{ grid_psu }}"


- name: unzip RDBMS installer (1/2)
  unarchive: src={{ patch_dir }}/{{ rdbms_zip_part1 }} dest={{ patch_dir }} remote_src=yes
  become: true
  become_user: oracle

- name: unzip RDBMS installer (2/2)
  unarchive: src={{ patch_dir }}/{{ rdbms_zip_part2 }} dest={{ patch_dir }} remote_src=yes
  become: true
  become_user: oracle

- name: unzip RDBMS psu
  unarchive: src={{ patch_dir }}/{{ rdbms_psu }} dest={{ patch_dir }} remote_src=yes
  become: true
  become_user: oracle

- name: unzip GRID installer (1/2)
  unarchive: src={{ patch_dir }}/{{ grid_zip_part1 }} dest={{ patch_dir }} remote_src=yes
  become: true
  become_user: grid

- name: unzip GRID installer (2/2)
  unarchive: src={{ patch_dir }}/{{ grid_zip_part2 }} dest={{ patch_dir }} remote_src=yes
  become: true
  become_user: grid

- name: unzip GRID psu
  unarchive: src={{ patch_dir }}/{{ grid_psu }} dest={{ patch_dir }} remote_src=yes
  become: true
  become_user: grid

- name: get memory total
  shell: grep MemTotal /proc/meminfo | awk 'END { print $2 }'
  register: memTotal

- name: get gid oinstall
  shell: "getent group oinstall | cut -d: -f3"
  register: oinstallGid

- name: set sysctl parameters
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.val }}"
    state: present
  with_items:
  - { name: 'fs.file-max', val: '6815744' }
  - { name: 'kernel.sem', val: '250 32000 100 128' }
  - { name: 'kernel.shmmni', val: '4096' }
  - { name: 'kernel.shmall', val: '1073741824' }
  - { name: 'kernel.shmmax', val: '4398046511104' }
  - { name: 'net.core.rmem_default', val: '262144' }
  - { name: 'net.core.rmem_max', val: '4194304' }
  - { name: 'net.core.wmem_default', val: '262144' }
  - { name: 'net.core.wmem_max', val: '1048576' }
  - { name: 'fs.aio-max-nr', val: '1048576' }
  - { name: 'net.ipv4.ip_local_port_range', val: '9000 65500' }
  - { name: 'vm.nr_hugepages', val: "{{ (memTotal.stdout|int*0.8/2048)|int }}" }
  - { name: 'vm.hugetlb_shm_group', val: "{{ oinstallGid.stdout }}" }

- name: set limits parameters
  pam_limits: 
    domain: "{{ item[1] }}"
    limit_type: "{{ item[0].type }}"
    limit_item: "{{ item[0].item }}"
    value: "{{ item[0].val }}"
    use_max: yes
  with_nested:
    - [ { type: 'soft', item: 'nproc', val: '16384' }, { type: 'hard', item: 'nproc', val: '16384' }, { type: 'soft', item: 'nofile', val: '1024' }, { type: 'hard', item: 'nofile', val: '65536' }, { type: 'soft', item: 'stack', val: '10240' }, { type: 'hard', item: 'stack', val: '32768' }, { type: 'hard', item: 'memlock', val: "{{ (memTotal.stdout|int*0.95)|int }}" }, { type: 'soft', item: 'memlock', val: "{{ (memTotal.stdout|int*0.95)|int }}" } ]
    - [ 'oracle', 'grid']

- name: update bash_profile user oracle
  blockinfile:
    dest: /home/oracle/.bash_profile
    block: |
      export ORACLE_BASE={{ oracle_base }}
      export ORACLE_HOME={{ oracle_home }}
      export PATH=/usr/sbin:$PATH
      export PATH=$ORACLE_HOME/bin:$PATH
      export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib
      export CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib
      umask 022
    marker: "# {mark} Oracle Environnement"

- name: update bash_profile user grid
  blockinfile:
    dest: /home/grid/.bash_profile
    block: |
      export ORACLE_SID=+ASM
      export JAVA_HOME=/usr/local/java
      export ORACLE_BASE={{ grid_base }}
      export ORACLE_HOME={{ grid_home }}
      export NLS_DATE_FORMAT="DD-MON-YYYY HH24:MI:SS"; export NLS_DATE_FORMAT
      export TNS_ADMIN=$ORACLE_HOME/network/admin; export TNS_ADMIN
      export PATH=${JAVA_HOME}/bin:${PATH}:$HOME/bin:$ORACLE_HOME/bin:/usr/bin:/bin:/usr/bin/X11:/usr/local/bin:/u01/app/common/oracle/bin
      export LD_LIBRARY_PATH=$ORACLE_HOME/lib:$ORACLE_HOME/oracm/lib:/lib:/usr/lib:/usr/local/lib
      export CLASSPATH=$ORACLE_HOME/JRE:$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib:$ORACLE_HOME/network/jlib
      umask 022
    marker: "# {mark} Grid Environnement"

- name: set ntpd options
  lineinfile:
    dest: /etc/sysconfig/ntpd
    regexp: '^OPTIONS='
    line: 'OPTIONS="-g -x -p /var/run/ntpd.pid"'

- name: restart ntpd
  service:
    name: ntpd
    state: restarted

- name: restart machine
  shell: sleep 2 && shutdown -r now "Ansible updates triggered"
  async: 1
  poll: 0
  ignore_errors: true

- name: waiting for server to come back
  local_action: wait_for host={{ inventory_hostname }} state=started delay=30 timeout=30


